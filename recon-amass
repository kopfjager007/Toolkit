#!/bin/bash
# ZSH Plugin
# Author: Aaron Lesmeister
# Date: 2019-10-22
# File: recon-amass
# Purpose: Execute Amass Enum and parse output.
# Data Format: N/A

P="$(tput setaf 7)$(tput bold)[$(tput setaf 2)+$(tput setaf 7)]$(tput sgr0)"
F="$(tput setaf 7)$(tput bold)[$(tput setaf 1)!$(tput setaf 7)]$(tput sgr0)"
DOMAIN="$1"
OUT_RAW="amass-$DOMAIN-raw"
OUT_TSV="amass-$DOMAIN.tsv"

PURPOSE="Execute Amass Enum and Parse Output"
USAGE="recon-amass <client.tld>"
DATA_FORMAT="amass enum -ipv4 -brute -norecursive -noalts -d <domain.tld>"

if [[ "$1" == "" || "$1" == "help" || "$1" == "h" ]]; then
	echo "$PURPOSE"
	echo "Executes: $DATA_FORMAT"
	echo "Usage: $USAGE"
else
	echo -e "${P} Running Amass against $DOMAIN..."
	amass enum -ipv4 -brute -norecursive -noalts -d $DOMAIN | tee $OUT_RAW
	if [ $? -eq 0 ]; then
		echo -e "${P} Amass Completed!"
		echo -e "${P} Parsing and Sorting Output..."
		while read -r line; do
			fqdn=$(echo "$line"|cut -d' ' -f1)
			ips=$(echo "$line"|cut -d' ' -f2)
			if [[ "$ips" =~ .*",".* ]]; then
				ips="$(echo $ips|sed -e 's/,/\n/g')"
				ipArray=($ips)
				for (( i=0; i<${#ipArray[@]}; i++ )) do
					echo -e "$fqdn,${ipArray[$i]}"
				done
			else
				echo -e "$fqdn,$ips"
			fi
		done < $OUT_RAW | sort -fd | awk -F ',' '{print $2,"\t",$1}' | tr -d ' ' > $OUT_TSV
		echo -e "${P} Done!"
	else
		echo -e "${F} Error running amass!"
		exit 1
	fi
fi
